/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPriceOracle,
  IPriceOracleInterface,
} from "../../../../../../contracts/paymasters/ERC20Paymaster/oracle/interfaces/IPriceOracle";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPriceOracle__factory {
  static readonly abi = _abi;
  static createInterface(): IPriceOracleInterface {
    return new Interface(_abi) as IPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPriceOracle {
    return new Contract(address, _abi, runner) as unknown as IPriceOracle;
  }
}
