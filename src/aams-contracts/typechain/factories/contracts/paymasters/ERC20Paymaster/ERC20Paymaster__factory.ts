/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20Paymaster,
  ERC20PaymasterInterface,
} from "../../../../contracts/paymasters/ERC20Paymaster/ERC20Paymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAlchemyEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "RegisterToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenNeeded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "UserOperationSponsored",
    type: "event",
  },
  {
    inputs: [],
    name: "NATIVE_ASSET_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POST_OP_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IAlchemyEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isSupportToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenPriceOracle",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAlchemyEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenDecimals",
        type: "uint256",
      },
      {
        internalType: "contract IPriceOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenPriceDecimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cachedPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "updateTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationResult",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200290b3803806200290b833981810160405281019062000037919062000376565b818180600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000af5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a69190620003ce565b60405180910390fd5b620000c081620000dc60201b60201c565b50620000d282620001a060201b60201c565b50505050620003eb565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001b0620001f460201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002046200029660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200022a6200029e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200029457620002566200029660201b60201c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016200028b9190620003ce565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002f982620002cc565b9050919050565b60006200030d82620002ec565b9050919050565b6200031f8162000300565b81146200032b57600080fd5b50565b6000815190506200033f8162000314565b92915050565b6200035081620002ec565b81146200035c57600080fd5b50565b600081519050620003708162000345565b92915050565b6000806040838503121562000390576200038f620002c7565b5b6000620003a0858286016200032e565b9250506020620003b3858286016200035f565b9150509250929050565b620003c881620002ec565b82525050565b6000602082019050620003e56000830184620003bd565b92915050565b61251080620003fb6000396000f3fe60806040526004361061012a5760003560e01c80638b809bb7116100ab578063c23a5cea1161006f578063c23a5cea14610398578063c399ec88146103c1578063d0e30db0146103ec578063f2fde38b146103f6578063f465c77e1461041f578063fc0c546a1461045d5761012a565b80638b809bb7146102d75780638da5cb5b14610302578063a9a234091461032d578063b0d691fe14610356578063bb9fe6bf146103815761012a565b80634739f7e5116100f25780634739f7e5146101f157806348d58d221461021a578063584465f21461025757806368c4ac2614610280578063715018a6146102c05761012a565b806301e336671461012f5780630396cb60146101585780630582264b14610174578063205c28781461019f57806321746615146101c8575b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190611817565b610488565b005b610172600480360381019061016d91906118a6565b610514565b005b34801561018057600080fd5b506101896105ad565b60405161019691906118e2565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c1919061193b565b6105b2565b005b3480156101d457600080fd5b506101ef60048036038101906101ea919061197b565b61064d565b005b3480156101fd57600080fd5b50610218600480360381019061021391906119a8565b610734565b005b34801561022657600080fd5b50610241600480360381019061023c919061197b565b610b5a565b60405161024e9190611a03565b60405180910390f35b34801561026357600080fd5b5061027e60048036038101906102799190611a5c565b610bf5565b005b34801561028c57600080fd5b506102a760048036038101906102a2919061197b565b610c41565b6040516102b79493929190611ae8565b60405180910390f35b3480156102cc57600080fd5b506102d5610c91565b005b3480156102e357600080fd5b506102ec610ca5565b6040516102f991906118e2565b60405180910390f35b34801561030e57600080fd5b50610317610cab565b6040516103249190611b3c565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f9190611be1565b610cd4565b005b34801561036257600080fd5b5061036b610cee565b6040516103789190611c76565b60405180910390f35b34801561038d57600080fd5b50610396610d14565b005b3480156103a457600080fd5b506103bf60048036038101906103ba9190611c91565b610da0565b005b3480156103cd57600080fd5b506103d6610e38565b6040516103e391906118e2565b60405180910390f35b6103f4610edb565b005b34801561040257600080fd5b5061041d6004803603810190610418919061197b565b610f6b565b005b34801561042b57600080fd5b5061044660048036038101906104419190611d19565b610ff1565b604051610454929190611e18565b60405180910390f35b34801561046957600080fd5b5061047261106d565b60405161047f9190611e69565b60405180910390f35b610490611093565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016104cb929190611e84565b6020604051808303816000875af11580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e9190611ed9565b50505050565b61051c611093565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016105789190611f15565b6000604051808303818588803b15801561059157600080fd5b505af11580156105a5573d6000803e3d6000fd5b505050505050565b601281565b6105ba611093565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610617929190611f3f565b600060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050505050565b61066061065982610b5a565b600261111a565b60006106cd600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661112d565b90508077ffffffffffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b61073c611093565b610777600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415600061111a565b6107b2600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415600161111a565b8173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190611fa1565b60ff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a9190611fa1565b60ff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190611fa1565b60ff1660026000018190555080600260010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b129190611fa1565b60ff1660028001819055507f08bf8e971f6b1ed2fa302066ab8d507c0f1c764aaea9b04c10bce235dc8450578282604051610b4e929190611fce565b60405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff16600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b610bfd611093565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b610c99611093565b610ca360006111a5565b565b619c4081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610cdc611269565b610ce8848484846112c5565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d1c611093565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d8657600080fd5b505af1158015610d9a573d6000803e3d6000fd5b50505050565b610da8611093565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610e039190611ff7565b600060405180830381600087803b158015610e1d57600080fd5b505af1158015610e31573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e959190611b3c565b602060405180830381865afa158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed69190612027565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610f379190611b3c565b6000604051808303818588803b158015610f5057600080fd5b505af1158015610f64573d6000803e3d6000fd5b5050505050565b610f73611093565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fe55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fdc9190611b3c565b60405180910390fd5b610fee816111a5565b50565b6060600061100861afc88660a0013511600561111a565b6000611013866113aa565b90506000611020876113ba565b90506000619c40826110329190612083565b905082600082600060405160200161104d9493929190612100565b604051602081830303815290604052945060009350505050935093915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61109b6113f5565b73ffffffffffffffffffffffffffffffffffffffff166110b9610cab565b73ffffffffffffffffffffffffffffffffffffffff1614611118576110dc6113f5565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161110f9190611b3c565b60405180910390fd5b565b8161112957611128816113fd565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa15801561117a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119e919061217b565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112c357600080fd5b565b6002808111156112d8576112d76121a8565b5b8460028111156112eb576112ea6121a8565b5b03156113a4576000670de0b6b3a76400009050600080600080878781019061131391906121d7565b935093509350935060006012600a61132b9190612371565b82848961133891906123bc565b6113429190612083565b61134c919061241f565b905061139d853083600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611410909392919063ffffffff16565b5050505050505b50505050565b6000808235905080915050919050565b6000808260e001359050600083610100013590508082036113df5781925050506113f0565b6113eb82488301611492565b925050505b919050565b600033905090565b61140d816244564c60e81b6114ab565b50565b61148c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161144593929190612450565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061152b565b50505050565b60008183106114a157816114a3565b825b905092915050565b60008160e81c62ffffff1690506030600a840601600a840493506030600a850601600a850494506030600a8606018360081b60230160181b8160101b8360081b850101810160c81b7f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260076024528060445260646000fd5b6000611556828473ffffffffffffffffffffffffffffffffffffffff166115c290919063ffffffff16565b9050600081511415801561157b5750808060200190518101906115799190611ed9565b155b156115bd57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016115b49190611b3c565b60405180910390fd5b505050565b60606115d0838360006115d8565b905092915050565b60608147101561161f57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016116169190611b3c565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161164891906124c3565b60006040518083038185875af1925050503d8060008114611685576040519150601f19603f3d011682016040523d82523d6000602084013e61168a565b606091505b509150915061169a8683836116a5565b925050509392505050565b6060826116ba576116b582611734565b61172c565b600082511480156116e2575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561172457836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161171b9190611b3c565b60405180910390fd5b81905061172d565b5b9392505050565b6000815111156117475780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117ae82611783565b9050919050565b6117be816117a3565b81146117c957600080fd5b50565b6000813590506117db816117b5565b92915050565b6000819050919050565b6117f4816117e1565b81146117ff57600080fd5b50565b600081359050611811816117eb565b92915050565b6000806000606084860312156118305761182f611779565b5b600061183e868287016117cc565b935050602061184f868287016117cc565b925050604061186086828701611802565b9150509250925092565b600063ffffffff82169050919050565b6118838161186a565b811461188e57600080fd5b50565b6000813590506118a08161187a565b92915050565b6000602082840312156118bc576118bb611779565b5b60006118ca84828501611891565b91505092915050565b6118dc816117e1565b82525050565b60006020820190506118f760008301846118d3565b92915050565b600061190882611783565b9050919050565b611918816118fd565b811461192357600080fd5b50565b6000813590506119358161190f565b92915050565b6000806040838503121561195257611951611779565b5b600061196085828601611926565b925050602061197185828601611802565b9150509250929050565b60006020828403121561199157611990611779565b5b600061199f848285016117cc565b91505092915050565b600080604083850312156119bf576119be611779565b5b60006119cd858286016117cc565b92505060206119de858286016117cc565b9150509250929050565b60008115159050919050565b6119fd816119e8565b82525050565b6000602082019050611a1860008301846119f4565b92915050565b6000611a29826117a3565b9050919050565b611a3981611a1e565b8114611a4457600080fd5b50565b600081359050611a5681611a30565b92915050565b600060208284031215611a7257611a71611779565b5b6000611a8084828501611a47565b91505092915050565b6000819050919050565b6000611aae611aa9611aa484611783565b611a89565b611783565b9050919050565b6000611ac082611a93565b9050919050565b6000611ad282611ab5565b9050919050565b611ae281611ac7565b82525050565b6000608082019050611afd60008301876118d3565b611b0a6020830186611ad9565b611b1760408301856118d3565b611b2460608301846118d3565b95945050505050565b611b36816117a3565b82525050565b6000602082019050611b516000830184611b2d565b92915050565b60038110611b6457600080fd5b50565b600081359050611b7681611b57565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611ba157611ba0611b7c565b5b8235905067ffffffffffffffff811115611bbe57611bbd611b81565b5b602083019150836001820283011115611bda57611bd9611b86565b5b9250929050565b60008060008060608587031215611bfb57611bfa611779565b5b6000611c0987828801611b67565b945050602085013567ffffffffffffffff811115611c2a57611c2961177e565b5b611c3687828801611b8b565b93509350506040611c4987828801611802565b91505092959194509250565b6000611c6082611ab5565b9050919050565b611c7081611c55565b82525050565b6000602082019050611c8b6000830184611c67565b92915050565b600060208284031215611ca757611ca6611779565b5b6000611cb584828501611926565b91505092915050565b600080fd5b60006101608284031215611cda57611cd9611cbe565b5b81905092915050565b6000819050919050565b611cf681611ce3565b8114611d0157600080fd5b50565b600081359050611d1381611ced565b92915050565b600080600060608486031215611d3257611d31611779565b5b600084013567ffffffffffffffff811115611d5057611d4f61177e565b5b611d5c86828701611cc3565b9350506020611d6d86828701611d04565b9250506040611d7e86828701611802565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dc2578082015181840152602081019050611da7565b60008484015250505050565b6000601f19601f8301169050919050565b6000611dea82611d88565b611df48185611d93565b9350611e04818560208601611da4565b611e0d81611dce565b840191505092915050565b60006040820190508181036000830152611e328185611ddf565b9050611e4160208301846118d3565b9392505050565b6000611e5382611ab5565b9050919050565b611e6381611e48565b82525050565b6000602082019050611e7e6000830184611e5a565b92915050565b6000604082019050611e996000830185611b2d565b611ea660208301846118d3565b9392505050565b611eb6816119e8565b8114611ec157600080fd5b50565b600081519050611ed381611ead565b92915050565b600060208284031215611eef57611eee611779565b5b6000611efd84828501611ec4565b91505092915050565b611f0f8161186a565b82525050565b6000602082019050611f2a6000830184611f06565b92915050565b611f39816118fd565b82525050565b6000604082019050611f546000830185611f30565b611f6160208301846118d3565b9392505050565b600060ff82169050919050565b611f7e81611f68565b8114611f8957600080fd5b50565b600081519050611f9b81611f75565b92915050565b600060208284031215611fb757611fb6611779565b5b6000611fc584828501611f8c565b91505092915050565b6000604082019050611fe36000830185611b2d565b611ff06020830184611b2d565b9392505050565b600060208201905061200c6000830184611f30565b92915050565b600081519050612021816117eb565b92915050565b60006020828403121561203d5761203c611779565b5b600061204b84828501612012565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061208e826117e1565b9150612099836117e1565b92508282026120a7816117e1565b915082820484148315176120be576120bd612054565b5b5092915050565b6000819050919050565b60006120ea6120e56120e0846120c5565b611a89565b611f68565b9050919050565b6120fa816120cf565b82525050565b60006080820190506121156000830187611b2d565b6121226020830186611b2d565b61212f60408301856118d3565b61213c60608301846120f1565b95945050505050565b6000819050919050565b61215881612145565b811461216357600080fd5b50565b6000815190506121758161214f565b92915050565b60006020828403121561219157612190611779565b5b600061219f84828501612166565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080600080608085870312156121f1576121f0611779565b5b60006121ff87828801611926565b945050602061221087828801611926565b935050604061222187828801611802565b925050606061223287828801611802565b91505092959194509250565b60008160011c9050919050565b6000808291508390505b60018511156122955780860481111561227157612270612054565b5b60018516156122805780820291505b808102905061228e8561223e565b9450612255565b94509492505050565b6000826122ae576001905061236a565b816122bc576000905061236a565b81600181146122d257600281146122dc5761230b565b600191505061236a565b60ff8411156122ee576122ed612054565b5b8360020a91508482111561230557612304612054565b5b5061236a565b5060208310610133831016604e8410600b84101617156123405782820a90508381111561233b5761233a612054565b5b61236a565b61234d848484600161224b565b9250905081840481111561236457612363612054565b5b81810290505b9392505050565b600061237c826117e1565b9150612387836117e1565b92506123b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461229e565b905092915050565b60006123c7826117e1565b91506123d2836117e1565b92508282019050808211156123ea576123e9612054565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061242a826117e1565b9150612435836117e1565b925082612445576124446123f0565b5b828204905092915050565b60006060820190506124656000830186611b2d565b6124726020830185611b2d565b61247f60408301846118d3565b949350505050565b600081905092915050565b600061249d82611d88565b6124a78185612487565b93506124b7818560208601611da4565b80840191505092915050565b60006124cf8284612492565b91508190509291505056fea2646970667358221220a5f3480d2c7a05dd53085eeac08657e7f4e336d8b8efe8c976854bd98bc3779f64736f6c63430008140033";

type ERC20PaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Paymaster__factory extends ContractFactory {
  constructor(...args: ERC20PaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, _owner, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, _owner, overrides || {}) as Promise<
      ERC20Paymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Paymaster__factory {
    return super.connect(runner) as ERC20Paymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PaymasterInterface {
    return new Interface(_abi) as ERC20PaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Paymaster {
    return new Contract(address, _abi, runner) as unknown as ERC20Paymaster;
  }
}
