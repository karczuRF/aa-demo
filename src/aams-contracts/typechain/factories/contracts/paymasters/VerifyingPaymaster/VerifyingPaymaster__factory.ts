/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../../../../contracts/paymasters/VerifyingPaymaster/VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAlchemyEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IAlchemyEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAlchemyEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200204238038062002042833981810160405281019062000037919062000455565b828280600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000af5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a69190620004c2565b60405180910390fd5b620000c0816200012260201b60201c565b50620000d282620001e660201b60201c565b5050620000e5826200023a60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505050620004df565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001f6620002d360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6200024a620002d360201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002bf5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620002b69190620004c2565b60405180910390fd5b620002d0816200012260201b60201c565b50565b620002e36200037560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620003096200037d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200037357620003356200037560201b60201c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016200036a9190620004c2565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003d882620003ab565b9050919050565b6000620003ec82620003cb565b9050919050565b620003fe81620003df565b81146200040a57600080fd5b50565b6000815190506200041e81620003f3565b92915050565b6200042f81620003cb565b81146200043b57600080fd5b50565b6000815190506200044f8162000424565b92915050565b600080600060608486031215620004715762000470620003a6565b5b600062000481868287016200040d565b935050602062000494868287016200043e565b9250506040620004a7868287016200043e565b9150509250925092565b620004bc81620003cb565b82525050565b6000602082019050620004d96000830184620004b1565b92915050565b608051611b40620005026000396000818161046b01526109f60152611b406000f3fe6080604052600436106100e85760003560e01c8063b0d691fe1161008a578063c399ec8811610059578063c399ec8814610299578063d0e30db0146102c4578063f2fde38b146102ce578063f465c77e146102f7576100e8565b8063b0d691fe146101f1578063bb9fe6bf1461021c578063c23a5cea14610233578063c266f2921461025c576100e8565b8063584465f2116100c6578063584465f21461015d578063715018a6146101865780638da5cb5b1461019d578063a9a23409146101c8576100e8565b80630396cb60146100ed578063205c28781461010957806323d9ac9b14610132575b600080fd5b6101076004803603810190610102919061101f565b610335565b005b34801561011557600080fd5b50610130600480360381019061012b91906110e0565b6103ce565b005b34801561013e57600080fd5b50610147610469565b6040516101549190611141565b60405180910390f35b34801561016957600080fd5b50610184600480360381019061017f919061119a565b61048d565b005b34801561019257600080fd5b5061019b6104d9565b005b3480156101a957600080fd5b506101b26104ed565b6040516101bf9190611141565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea9190611251565b610516565b005b3480156101fd57600080fd5b50610206610530565b6040516102139190611324565b60405180910390f35b34801561022857600080fd5b50610231610556565b005b34801561023f57600080fd5b5061025a6004803603810190610255919061133f565b6105e2565b005b34801561026857600080fd5b50610283600480360381019061027e9190611391565b61067a565b60405161029091906113f3565b60405180910390f35b3480156102a557600080fd5b506102ae610725565b6040516102bb919061141d565b60405180910390f35b6102cc6107c8565b005b3480156102da57600080fd5b506102f560048036038101906102f09190611464565b610858565b005b34801561030357600080fd5b5061031e600480360381019061031991906114bd565b6108de565b60405161032c9291906115bc565b60405180910390f35b61033d610ac9565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b815260040161039991906115fb565b6000604051808303818588803b1580156103b257600080fd5b505af11580156103c6573d6000803e3d6000fd5b505050505050565b6103d6610ac9565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610433929190611625565b600060405180830381600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610495610ac9565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6104e1610ac9565b6104eb6000610b50565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61051e610c14565b61052a84848484610c70565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61055e610ac9565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b50505050565b6105ea610ac9565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b8152600401610645919061164e565b600060405180830381600087803b15801561065f57600080fd5b505af1158015610673573d6000803e3d6000fd5b5050505050565b600061068582610cab565b826020013583806040019061069a9190611678565b6040516106a892919061171a565b60405180910390208480606001906106c09190611678565b6040516106ce92919061171a565b604051809103902085608001358660a001358760c001358860e0013589610100013560405160200161070899989796959493929190611733565b604051602081830303815290604052805190602001209050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107829190611141565b602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c391906117d5565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b81526004016108249190611141565b6000604051808303818588803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b5050505050565b610860610ac9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108d25760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108c99190611141565b60405180910390fd5b6108db81610b50565b50565b60606000806108ec8661067a565b905060006014878061012001906109039190611678565b905061090f9190611831565b905060408114806109205750604181145b61095f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610956906118e8565b60405180910390fd5b6109de878061012001906109739190611678565b601490809261098493929190611912565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506109d084610cbb565b610cf190919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a62906119bf565b60405180910390fd5b600067ffffffffffffffff811115610a8657610a856119df565b5b6040519080825280601f01601f191660200182016040528015610ab85781602001600182028036833780820191505090505b506000935093505050935093915050565b610ad1610d1d565b73ffffffffffffffffffffffffffffffffffffffff16610aef6104ed565b73ffffffffffffffffffffffffffffffffffffffff1614610b4e57610b12610d1d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b459190611141565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c6e57600080fd5b565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca290611a5a565b60405180910390fd5b6000808235905080915050919050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610d018686610d25565b925092509250610d118282610d81565b82935050505092915050565b600033905090565b60008060006041845103610d6a5760008060006020870151925060408701519150606087015160001a9050610d5c88828585610ee5565b955095509550505050610d7a565b60006002855160001b9250925092505b9250925092565b60006003811115610d9557610d94611a7a565b5b826003811115610da857610da7611a7a565b5b0315610ee15760016003811115610dc257610dc1611a7a565b5b826003811115610dd557610dd4611a7a565b5b03610e0c576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610e2057610e1f611a7a565b5b826003811115610e3357610e32611a7a565b5b03610e78578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401610e6f919061141d565b60405180910390fd5b600380811115610e8b57610e8a611a7a565b5b826003811115610e9e57610e9d611a7a565b5b03610ee057806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401610ed791906113f3565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610f25576000600385925092509250610fcf565b600060018888888860405160008152602001604052604051610f4a9493929190611ac5565b6020604051602081039080840390855afa158015610f6c573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fc057600060016000801b93509350935050610fcf565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b610ffc81610fe3565b811461100757600080fd5b50565b60008135905061101981610ff3565b92915050565b60006020828403121561103557611034610fd9565b5b60006110438482850161100a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110778261104c565b9050919050565b6110878161106c565b811461109257600080fd5b50565b6000813590506110a48161107e565b92915050565b6000819050919050565b6110bd816110aa565b81146110c857600080fd5b50565b6000813590506110da816110b4565b92915050565b600080604083850312156110f7576110f6610fd9565b5b600061110585828601611095565b9250506020611116858286016110cb565b9150509250929050565b600061112b8261104c565b9050919050565b61113b81611120565b82525050565b60006020820190506111566000830184611132565b92915050565b600061116782611120565b9050919050565b6111778161115c565b811461118257600080fd5b50565b6000813590506111948161116e565b92915050565b6000602082840312156111b0576111af610fd9565b5b60006111be84828501611185565b91505092915050565b600381106111d457600080fd5b50565b6000813590506111e6816111c7565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611211576112106111ec565b5b8235905067ffffffffffffffff81111561122e5761122d6111f1565b5b60208301915083600182028301111561124a576112496111f6565b5b9250929050565b6000806000806060858703121561126b5761126a610fd9565b5b6000611279878288016111d7565b945050602085013567ffffffffffffffff81111561129a57611299610fde565b5b6112a6878288016111fb565b935093505060406112b9878288016110cb565b91505092959194509250565b6000819050919050565b60006112ea6112e56112e08461104c565b6112c5565b61104c565b9050919050565b60006112fc826112cf565b9050919050565b600061130e826112f1565b9050919050565b61131e81611303565b82525050565b60006020820190506113396000830184611315565b92915050565b60006020828403121561135557611354610fd9565b5b600061136384828501611095565b91505092915050565b600080fd5b600061016082840312156113885761138761136c565b5b81905092915050565b6000602082840312156113a7576113a6610fd9565b5b600082013567ffffffffffffffff8111156113c5576113c4610fde565b5b6113d184828501611371565b91505092915050565b6000819050919050565b6113ed816113da565b82525050565b600060208201905061140860008301846113e4565b92915050565b611417816110aa565b82525050565b6000602082019050611432600083018461140e565b92915050565b61144181611120565b811461144c57600080fd5b50565b60008135905061145e81611438565b92915050565b60006020828403121561147a57611479610fd9565b5b60006114888482850161144f565b91505092915050565b61149a816113da565b81146114a557600080fd5b50565b6000813590506114b781611491565b92915050565b6000806000606084860312156114d6576114d5610fd9565b5b600084013567ffffffffffffffff8111156114f4576114f3610fde565b5b61150086828701611371565b9350506020611511868287016114a8565b9250506040611522868287016110cb565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156657808201518184015260208101905061154b565b60008484015250505050565b6000601f19601f8301169050919050565b600061158e8261152c565b6115988185611537565b93506115a8818560208601611548565b6115b181611572565b840191505092915050565b600060408201905081810360008301526115d68185611583565b90506115e5602083018461140e565b9392505050565b6115f581610fe3565b82525050565b600060208201905061161060008301846115ec565b92915050565b61161f8161106c565b82525050565b600060408201905061163a6000830185611616565b611647602083018461140e565b9392505050565b60006020820190506116636000830184611616565b92915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261169557611694611669565b5b80840192508235915067ffffffffffffffff8211156116b7576116b661166e565b5b6020830192506001820236038313156116d3576116d2611673565b5b509250929050565b600081905092915050565b82818337600083830152505050565b600061170183856116db565b935061170e8385846116e6565b82840190509392505050565b60006117278284866116f5565b91508190509392505050565b600061012082019050611749600083018c611132565b611756602083018b61140e565b611763604083018a6113e4565b61177060608301896113e4565b61177d608083018861140e565b61178a60a083018761140e565b61179760c083018661140e565b6117a460e083018561140e565b6117b261010083018461140e565b9a9950505050505050505050565b6000815190506117cf816110b4565b92915050565b6000602082840312156117eb576117ea610fd9565b5b60006117f9848285016117c0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061183c826110aa565b9150611847836110aa565b925082820390508181111561185f5761185e611802565b5b92915050565b600082825260208201905092915050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b60006118d2604083611865565b91506118dd82611876565b604082019050919050565b60006020820190508181036000830152611901816118c5565b9050919050565b600080fd5b600080fd5b6000808585111561192657611925611908565b5b838611156119375761193661190d565b5b6001850283019150848603905094509492505050565b7f566572696679696e675061796d61737465723a2077726f6e67207369676e617460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b60006119a9602383611865565b91506119b48261194d565b604082019050919050565b600060208201905081810360008301526119d88161199c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000611a44600d83611865565b9150611a4f82611a0e565b602082019050919050565b60006020820190508181036000830152611a7381611a37565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b611abf81611aa9565b82525050565b6000608082019050611ada60008301876113e4565b611ae76020830186611ab6565b611af460408301856113e4565b611b0160608301846113e4565b9594505050505056fea264697066735822122021f58a4e1dd44ebc5725aa7b06ebbba43b97f1b1d62ae88a34b9e7cae08479db64736f6c63430008140033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    _verifyingSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _entryPoint,
      _owner,
      _verifyingSigner,
      overrides || {}
    );
  }
  override deploy(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    _verifyingSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _entryPoint,
      _owner,
      _verifyingSigner,
      overrides || {}
    ) as Promise<
      VerifyingPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifyingPaymaster__factory {
    return super.connect(runner) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VerifyingPaymaster {
    return new Contract(address, _abi, runner) as unknown as VerifyingPaymaster;
  }
}
